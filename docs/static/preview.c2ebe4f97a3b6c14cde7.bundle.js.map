{"version":3,"file":"static/preview.c2ebe4f97a3b6c14cde7.bundle.js","sources":["webpack:///./.storybook/stories/iconCustomization/EmojiIconsStory.tsx"],"sourcesContent":["\n  var withStorySource = require('@storybook/addon-storysource').withStorySource;\n  var __STORY__ = \"import * as React from 'react';\\r\\nimport * as Showdown from 'showdown';\\r\\nimport ReactMde, { ReactMdeTypes } from '../../../src/index';\\r\\nimport { storiesOf } from '@storybook/react';\\r\\n\\r\\ninterface State {\\r\\n  mdeState: ReactMdeTypes.MdeState;\\r\\n}\\r\\n\\r\\nconst icons = {\\r\\n  bold: <strong>B</strong>,\\r\\n  heading: 'H',\\r\\n  italic: <em>I</em>,\\r\\n  strikethrough: <del>S</del>,\\r\\n  link: 'üîó',\\r\\n  'quote-right': <strong>‚Äù</strong>,\\r\\n  code: 'ü§ì',\\r\\n  image: 'üì∏',\\r\\n  'list-ul': '‚è∫',\\r\\n  'list-ol': '#Ô∏è‚É£',\\r\\n  tasks: 'üìù',\\r\\n};\\r\\n\\r\\nconst iconProvider = name => {\\r\\n  return icons[name] || '‚ùì';\\r\\n};\\r\\n\\r\\nclass EmojiIconsStory extends React.Component<{}, State> {\\r\\n  converter: Showdown.Converter;\\r\\n\\r\\n  constructor(props) {\\r\\n    super(props);\\r\\n    this.state = {\\r\\n      mdeState: {\\r\\n        markdown: '**Hello world!**',\\r\\n      },\\r\\n    };\\r\\n    this.converter = new Showdown.Converter({\\r\\n      tables: true,\\r\\n      simplifiedAutoLink: true,\\r\\n      strikethrough: true,\\r\\n      tasklists: true,\\r\\n    });\\r\\n  }\\r\\n\\r\\n  handleValueChange = (mdeState: ReactMdeTypes.MdeState) => {\\r\\n    this.setState({ mdeState });\\r\\n  };\\r\\n\\r\\n  render() {\\r\\n    return (\\r\\n      <ReactMde\\r\\n        layout=\\\"horizontal\\\"\\r\\n        buttonContentOptions={{ iconProvider }}\\r\\n        onChange={this.handleValueChange}\\r\\n        editorState={this.state.mdeState}\\r\\n        generateMarkdownPreview={markdown => Promise.resolve(this.converter.makeHtml(markdown))}\\r\\n      />\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nstoriesOf('Icon Customization', module).add('emojis', () => <EmojiIconsStory />);\\r\\n\";\n  var __ADDS_MAP__ = {\"Icon Customization@emojis\":{\"startLoc\":{\"col\":44,\"line\":63},\"endLoc\":{\"col\":79,\"line\":63}}};\n  \n  import * as React from \"react\";\r\nimport * as Showdown from \"showdown\";\r\nimport ReactMde, {ReactMdeTypes} from \"../../../src/index\";\r\nimport {storiesOf} from \"@storybook/react\";\r\n\r\ninterface State {\r\n    mdeState: ReactMdeTypes.MdeState;\r\n}\r\n\r\nconst icons = {\r\n  \"bold\": (<strong>B</strong>),\r\n  \"heading\": \"H\",\r\n  \"italic\": (<em>I</em>),\r\n  \"strikethrough\": (<del>S</del>),\r\n  \"link\": \"üîó\",\r\n  \"quote-right\": (<strong>‚Äù</strong>),\r\n  \"code\": \"ü§ì\",\r\n  \"image\": \"üì∏\",\r\n  \"list-ul\": \"‚è∫\",\r\n  \"list-ol\": \"#Ô∏è‚É£\",\r\n  \"tasks\": \"üìù\",\r\n};\r\n\r\nconst iconProvider = (name) => {\r\n  return icons[name] || \"‚ùì\";\r\n};\r\n\r\nclass EmojiIconsStory extends React.Component<{}, State> {\r\n    converter: Showdown.Converter;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mdeState: {\r\n                markdown: \"**Hello world!**\",\r\n            },\r\n        };\r\n        this.converter = new Showdown.Converter({\r\n            tables: true,\r\n            simplifiedAutoLink: true,\r\n            strikethrough: true,\r\n            tasklists: true,\r\n        });\r\n    }\r\n\r\n    handleValueChange = (mdeState: ReactMdeTypes.MdeState) => {\r\n        this.setState({mdeState});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ReactMde\r\n                layout=\"horizontal\"\r\n                buttonContentOptions={{ iconProvider }}\r\n                onChange={this.handleValueChange}\r\n                editorState={this.state.mdeState}\r\n                generateMarkdownPreview={(markdown) => Promise.resolve(this.converter.makeHtml(markdown))}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nstoriesOf(\"Icon Customization\", module).addDecorator(withStorySource(__STORY__, __ADDS_MAP__))\r\n    .add(\"emojis\", () => (\r\n        <EmojiIconsStory/>\r\n    ));\r\n\n  "],"mappings":"AACA","sourceRoot":""}